// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file auth/v1/service.proto (package auth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DeleteAccountRequest, DeleteAccountResponse, DeleteUserAuthenticationRequest, DeleteUserAuthenticationResponse, GetMeRequest, GetMeResponse } from "./service_pb.js";
import { MethodIdempotency, MethodKind } from "@bufbuild/protobuf";

/**
 * The following error codes are not stated explicitly in the each rpc, but may be returned.
 *   - shared.InvalidArgument
 *   - shared.Unauthenticated
 *   - shared.Unauthorized
 *
 * @generated from service auth.v1.AuthService
 */
export const AuthService = {
  typeName: "auth.v1.AuthService",
  methods: {
    /**
     * @generated from rpc auth.v1.AuthService.GetMe
     */
    getMe: {
      name: "GetMe",
      I: GetMeRequest,
      O: GetMeResponse,
      kind: MethodKind.Unary,
      idempotency: MethodIdempotency.NoSideEffects,
    },
    /**
     * @generated from rpc auth.v1.AuthService.DeleteUserAuthentication
     */
    deleteUserAuthentication: {
      name: "DeleteUserAuthentication",
      I: DeleteUserAuthenticationRequest,
      O: DeleteUserAuthenticationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc auth.v1.AuthService.DeleteAccount
     */
    deleteAccount: {
      name: "DeleteAccount",
      I: DeleteAccountRequest,
      O: DeleteAccountResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

